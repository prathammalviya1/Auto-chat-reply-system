# # from openai import OpenAI
# # client=OpenAI(
# #     api_key="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",
# # )



# # command='''
# # [4:24 pm, 3/7/2024] Pratham Malviya: same
# # [10:31 pm, 3/7/2024] Muskan Mam ðŸ‡©ðŸ‡ª: You've to conf firm it with the placement office
# # [11:33 am, 4/7/2024] Pratham Malviya: Okay mam      
# # [10:11 pm, 8/7/2024] Pratham Malviya: Mam will the exam be held on 11 july or not ?
# # [10:13 pm, 8/7/2024] Pratham Malviya: Today, there is a call from the  examination department due to my fractured leg and they said if i will go with medical they will schedule my exam in any date but only in the month of july

# # '''
# # completion =client.chat.completions.create(
# #     model="gpt-3.5-turbo",
# #     messages=[
# #         {"role":"system","content":"you are a person named harry who speaks hindi as well as english. He is from India and is coder. you analyze chat history and respond like Harry"},
# #         {"role":"user","content":text}

# #     ]
# # )

# # print(completion.choices[0].message.content)

# from openai import OpenAI
 
# # pip install openai 
# # if you saved the key under a different environment variable name, you can do something like:
# client = OpenAI(
#   api_key="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",
# )

# command = '''
# [20:30, 12/6/2024] Naruto: jo sunke coding ho sake?
# [20:30, 12/6/2024] Rohan Das: https://www.youtube.com/watch?v=DzmG-4-OASQ
# [20:30, 12/6/2024] Rohan Das: ye
# [20:30, 12/6/2024] Rohan Das: https://www.youtube.com/watch?v=DzmG-4-OASQ
# [20:31, 12/6/2024] Naruto: This is hindi
# [20:31, 12/6/2024] Naruto: send me some english songs
# [20:31, 12/6/2024] Naruto: but wait
# [20:31, 12/6/2024] Naruto: this song is amazing
# [20:31, 12/6/2024] Naruto: so I will stick to it
# [20:31, 12/6/2024] Naruto: send me some english song also
# [20:31, 12/6/2024] Rohan Das: hold on
# [20:31, 12/6/2024] Naruto: I know what you are about to send
# [20:32, 12/6/2024] Naruto: ðŸ˜‚ðŸ˜‚
# [20:32, 12/6/2024] Rohan Das: https://www.youtube.com/watch?v=ar-3chBG4NU
# ye hindi English mix hai but best hai
# [20:33, 12/6/2024] Naruto: okok
# [20:33, 12/6/2024] Rohan Das: Haan
# '''
# completion = client.chat.completions.create(
#   model="gpt-3.5-turbo",
#   messages=[
#     {"role": "system", "content": "You are a person named harry who speaks hindi as well as english. He is from India and is a coder. You analyze chat history and respond like Harry"},
#     {"role": "user", "content": command}
#   ]
# )

# print(completion.choices[0].message.content).

import openai

# Initialize the OpenAI client with your API key
openai.api_key = "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"

command = '''
[12:48 am, 1/9/2024] Rohan Das: Are bss thik ho jayega 1 din m
[12:48 am, 1/9/2024] Rohan Das: Koi oil diya hoga un logo ne
[12:48 am, 1/9/2024] Rohan Das: Lagane ko
[12:48 am, 1/9/2024] Pratham Malviya: ðŸ˜‚ðŸ˜‚
[12:48 am, 1/9/2024] Pratham Malviya: na bas sarso ka tel laga leta huðŸ˜‚
[12:48 am, 1/9/2024] Pratham Malviya: aur fitkari
[12:49 am, 1/9/2024] Rohan Das: Naughty ko rha ke
[12:49 am, 1/9/2024] Rohan Das: Ek alag se dabur ka laal tel aata h vo laga

'''

completion = openai.ChatCompletion.create(
  model="gpt-3.5-turbo",
  messages=[
    {"role": "system", "content": "You are a person named Pratham Malviya who speaks Hindi as well as English. You are from India and you are a coder. You analyze chat history and roast people in a funny way. Output should be the next chat response (text message only)."},
    {"role": "system", "content": "Do not start like this [21:02, 12/6/2024] Rohan Das: "},
    {"role": "user", "content": command}
  ]
)

# Print the response generated by the model
print(completion.choices[0].message["content"])
